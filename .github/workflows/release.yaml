name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # 当推送符合v*.*.*(如v1.0.0)格式的标签时触发

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest  # 使用Windows环境构建
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'  # 指定Python版本
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt  # 安装项目依赖
      
      - name: Get tag version
        id: get_version
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          else
            echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Create git tag
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "Creating tag v${{ env.VERSION }}"
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git fetch --tags
          git tag -a "v${{ env.VERSION }}" -m "Release v${{ env.VERSION }}"
          git push origin "v${{ env.VERSION }}"
          echo "Tag v${{ env.VERSION }} created and pushed"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify tag
        if: github.event_name == 'workflow_dispatch'
        run: |
          git fetch --tags
          git tag -l
          echo "Current tag: v${{ env.VERSION }}"
        shell: bash

      - name: Build with PyInstaller
        run: |
          pyinstaller --onefile --windowed --icon=icon.ico --name=PyUSBCopier_${{ env.VERSION }} --collect-all=. main.py
        # 参数说明：
        # --onefile: 打包为单个exe文件
        # --windowed: 运行时不显示控制台窗口
        # --icon: 指定应用图标（请确保icon.ico文件存在）
        # --name: 指定输出文件名称
        # --collect-all=.: 包含当前目录下的所有模块和资源
        
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: PyUSBCopier v${{ env.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            dist/PyUSBCopier_${{ env.VERSION }}.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
